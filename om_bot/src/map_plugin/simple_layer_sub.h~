#ifndef SIMPLE_LAYER_H_
#define SIMPLE_LAYER_H_
#include <ros/ros.h>
#include <costmap_2d/layer.h>
#include <costmap_2d/layered_costmap.h>
#include <costmap_2d/GenericPluginConfig.h>
#include <dynamic_reconfigure/server.h>
#include <my_repository/map_cfgConfig.h>
#include <geometry_msgs/Pose.h>
#include <std_srvs/Empty.h>


namespace simple_layer_namespace
{

class SimpleLayerSub : public costmap_2d::Layer
{
public:
  SimpleLayerSub();

  virtual void onInitialize();
  virtual void updateBounds(double origin_x, double origin_y, double origin_yaw, double* min_x, double* min_y, double* max_x,
                             double* max_y);
  virtual void updateCosts(costmap_2d::Costmap2D& master_grid, int min_i, int min_j, int max_i, int max_j);

private:
  void reconfigureCB(my_repository_workstation::map_cfgConfig&config, uint32_t level);

  double mark_x_, mark_y_, obs_x, obs_y, last_obj_x, last_obj_y;
  dynamic_reconfigure::Server<my_repository_workstation::map_cfgConfig> *dsrv_;
  
  unsigned char last_cost;
  ros::ServiceClient client_;
  
};
}
#endif
